pptname,invariant,invariantType,variables,tp,fp,enter,bug,description,response resource,name_attribute
main.orgs{org}repos.createOrganizationRepository&201(main.createOrganizationRepository&Input):::EXIT,input.team_id > return.forks,daikon.inv.binary.twoScalar.IntGreaterThan,"(input.team_id, return.forks)",1,0,0,0,integer (description: The id of the team that will be granted access to this repository. This is only valid when creating a repository in an organization);,repository,"[('input', 'team_id'), ('forks',)]"
main.orgs{org}repos.createOrganizationRepository&201(main.createOrganizationRepository&Input):::EXIT,return.id > return.forks,daikon.inv.binary.twoScalar.IntGreaterThan,"(return.id, return.forks)",1,0,0,0,Unique identifier of the repository;,repository,"[('repository', 'id'), ('repository', 'forks')]"
main.v1publiccomics{comicId}.getComicIndividual&200(main.getComicIndividual&Input):::EXIT,input.comicId > return.data.offset,daikon.inv.binary.twoScalar.IntGreaterThan,"(input.comicId, return.data.offset)",1,0,0,0,integer (description: A single comic);The requested offset (number of skipped results) of the call.,ComicDataContainer,"[('input', 'comicId'), ('offset',)]"
main.v1publiccomics{comicId}.getComicIndividual&200(main.getComicIndividual&Input):::EXIT,input.comicId > return.data.total,daikon.inv.binary.twoScalar.IntGreaterThan,"(input.comicId, return.data.total)",1,0,0,0,integer (description: A single comic);The total number of resources available given the current filter set.,ComicDataContainer,"[('input', 'comicId'), ('total',)]"
main.youtubev3videos.getVideos&200&items(main.getVideos&Input):::EXIT,return.snippet.thumbnails.default.height > size(input.part[]),daikon.inv.binary.twoScalar.IntGreaterThan,"(return.snippet.thumbnails.default.height, size(input.part[..]))",1,0,0,0,"(Optional) Height of the thumbnail image.;array (description: The *part* parameter specifies a comma-separated list of one or more video resource properties that the API response will include. If the parameter identifies a property that contains child properties, the child properties will be included in the response. For example, in a video resource, the snippet property contains the channelId, title, description, tags, and categoryId properties. As such, if you set *part=snippet*, the API response will contain all of those properties)",input,"[('Thumbnail', 'height'), ('input', 'part')]"
main.youtubev3videos.getVideos&200&items(main.getVideos&Input):::EXIT,return.snippet.thumbnails.default.width > size(input.part[]),daikon.inv.binary.twoScalar.IntGreaterThan,"(return.snippet.thumbnails.default.width, size(input.part[..]))",1,0,0,0,"(Optional) Width of the thumbnail image.;array (description: The *part* parameter specifies a comma-separated list of one or more video resource properties that the API response will include. If the parameter identifies a property that contains child properties, the child properties will be included in the response. For example, in a video resource, the snippet property contains the channelId, title, description, tags, and categoryId properties. As such, if you set *part=snippet*, the API response will contain all of those properties)",input,"[('Thumbnail', 'width'), ('input', 'part')]"
main.youtubev3videos.getVideos&200&items(main.getVideos&Input):::EXIT,return.snippet.thumbnails.high.height > size(input.part[]),daikon.inv.binary.twoScalar.IntGreaterThan,"(return.snippet.thumbnails.high.height, size(input.part[..]))",1,0,0,0,"(Optional) Height of the thumbnail image.;array (description: The *part* parameter specifies a comma-separated list of one or more video resource properties that the API response will include. If the parameter identifies a property that contains child properties, the child properties will be included in the response. For example, in a video resource, the snippet property contains the channelId, title, description, tags, and categoryId properties. As such, if you set *part=snippet*, the API response will contain all of those properties)",input,"[('Thumbnail', 'height'), ('input', 'part')]"
main.youtubev3videos.getVideos&200&items(main.getVideos&Input):::EXIT,return.snippet.thumbnails.high.width > size(input.part[]),daikon.inv.binary.twoScalar.IntGreaterThan,"(return.snippet.thumbnails.high.width, size(input.part[..]))",1,0,0,0,"(Optional) Width of the thumbnail image.;array (description: The *part* parameter specifies a comma-separated list of one or more video resource properties that the API response will include. If the parameter identifies a property that contains child properties, the child properties will be included in the response. For example, in a video resource, the snippet property contains the channelId, title, description, tags, and categoryId properties. As such, if you set *part=snippet*, the API response will contain all of those properties)",input,"[('Thumbnail', 'width'), ('input', 'part')]"
main.youtubev3videos.getVideos&200&items(main.getVideos&Input):::EXIT,return.snippet.thumbnails.maxres.height > size(input.part[]),daikon.inv.binary.twoScalar.IntGreaterThan,"(return.snippet.thumbnails.maxres.height, size(input.part[..]))",1,0,0,0,"(Optional) Height of the thumbnail image.;array (description: The *part* parameter specifies a comma-separated list of one or more video resource properties that the API response will include. If the parameter identifies a property that contains child properties, the child properties will be included in the response. For example, in a video resource, the snippet property contains the channelId, title, description, tags, and categoryId properties. As such, if you set *part=snippet*, the API response will contain all of those properties)",input,"[('Thumbnail', 'height'), ('input', 'part')]"
main.youtubev3videos.getVideos&200&items(main.getVideos&Input):::EXIT,return.snippet.thumbnails.maxres.width > size(input.part[]),daikon.inv.binary.twoScalar.IntGreaterThan,"(return.snippet.thumbnails.maxres.width, size(input.part[..]))",1,0,0,0,"(Optional) Width of the thumbnail image.;array (description: The *part* parameter specifies a comma-separated list of one or more video resource properties that the API response will include. If the parameter identifies a property that contains child properties, the child properties will be included in the response. For example, in a video resource, the snippet property contains the channelId, title, description, tags, and categoryId properties. As such, if you set *part=snippet*, the API response will contain all of those properties)",input,"[('Thumbnail', 'width'), ('input', 'part')]"
main.youtubev3videos.getVideos&200&items(main.getVideos&Input):::EXIT,return.snippet.thumbnails.medium.height > size(input.part[]),daikon.inv.binary.twoScalar.IntGreaterThan,"(return.snippet.thumbnails.medium.height, size(input.part[..]))",1,0,0,0,"(Optional) Height of the thumbnail image.;array (description: The *part* parameter specifies a comma-separated list of one or more video resource properties that the API response will include. If the parameter identifies a property that contains child properties, the child properties will be included in the response. For example, in a video resource, the snippet property contains the channelId, title, description, tags, and categoryId properties. As such, if you set *part=snippet*, the API response will contain all of those properties)",input,"[('Thumbnail', 'height'), ('input', 'part')]"
main.youtubev3videos.getVideos&200&items(main.getVideos&Input):::EXIT,return.snippet.thumbnails.medium.width > size(input.part[]),daikon.inv.binary.twoScalar.IntGreaterThan,"(return.snippet.thumbnails.medium.width, size(input.part[..]))",1,0,0,0,"(Optional) Width of the thumbnail image.;array (description: The *part* parameter specifies a comma-separated list of one or more video resource properties that the API response will include. If the parameter identifies a property that contains child properties, the child properties will be included in the response. For example, in a video resource, the snippet property contains the channelId, title, description, tags, and categoryId properties. As such, if you set *part=snippet*, the API response will contain all of those properties)",input,"[('Thumbnail', 'width'), ('input', 'part')]"
main.youtubev3videos.getVideos&200&items(main.getVideos&Input):::EXIT,return.snippet.thumbnails.standard.height > size(input.part[]),daikon.inv.binary.twoScalar.IntGreaterThan,"(return.snippet.thumbnails.standard.height, size(input.part[..]))",1,0,0,0,"(Optional) Height of the thumbnail image.;array (description: The *part* parameter specifies a comma-separated list of one or more video resource properties that the API response will include. If the parameter identifies a property that contains child properties, the child properties will be included in the response. For example, in a video resource, the snippet property contains the channelId, title, description, tags, and categoryId properties. As such, if you set *part=snippet*, the API response will contain all of those properties)",input,"[('Thumbnail', 'height'), ('input', 'part')]"
main.youtubev3videos.getVideos&200&items(main.getVideos&Input):::EXIT,return.snippet.thumbnails.standard.width > size(input.part[]),daikon.inv.binary.twoScalar.IntGreaterThan,"(return.snippet.thumbnails.standard.width, size(input.part[..]))",1,0,0,0,"(Optional) Width of the thumbnail image.;array (description: The *part* parameter specifies a comma-separated list of one or more video resource properties that the API response will include. If the parameter identifies a property that contains child properties, the child properties will be included in the response. For example, in a video resource, the snippet property contains the channelId, title, description, tags, and categoryId properties. As such, if you set *part=snippet*, the API response will contain all of those properties)",input,"[('Thumbnail', 'width'), ('input', 'part')]"
main.youtubev3videos.getVideos&200(main.getVideos&Input):::EXIT,input.maxHeight > return.pageInfo.resultsPerPage,daikon.inv.binary.twoScalar.IntGreaterThan,"(input.maxHeight, return.pageInfo.resultsPerPage)",1,0,0,0,;The number of results included in the API response.,PageInfo,"[('input', 'maxHeight'), ('resultsPerPage',)]"
main.youtubev3videos.getVideos&200(main.getVideos&Input):::EXIT,input.maxHeight > size(return.items[]),daikon.inv.binary.twoScalar.IntGreaterThan,"(input.maxHeight, size(return.items[..]))",1,0,0,0,;,VideoListResponse,"[('input', 'maxHeight'), ('items',)]"
main.youtubev3videos.getVideos&200(main.getVideos&Input):::EXIT,input.maxWidth > return.pageInfo.resultsPerPage,daikon.inv.binary.twoScalar.IntGreaterThan,"(input.maxWidth, return.pageInfo.resultsPerPage)",1,0,0,0,integer (description: Return the player with maximum height specified in);The number of results included in the API response.,PageInfo,"[('input', 'maxWidth'), ('resultsPerPage',)]"
main.youtubev3videos.getVideos&200(main.getVideos&Input):::EXIT,input.maxWidth > size(return.items[]),daikon.inv.binary.twoScalar.IntGreaterThan,"(input.maxWidth, size(return.items[..]))",1,0,0,0,integer (description: Return the player with maximum height specified in);,VideoListResponse,"[('input', 'maxWidth'), ('items',)]"
