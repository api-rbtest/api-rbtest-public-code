pptname,invariant,invariantType,variables,tp,fp,enter,bug,description,response resource,name_attribute
main.orgs{org}repos.createOrganizationRepository&201(main.createOrganizationRepository&Input):::EXIT,LENGTH(return.node_id)==12,daikon.inv.unary.string.FixedLengthString,(return.node_id),1,0,0,0,,repository,"[('repository', 'node_id')]"
main.orgs{org}repos.createOrganizationRepository&201(main.createOrganizationRepository&Input):::EXIT,LENGTH(return.license.node_id)==16,daikon.inv.unary.string.FixedLengthString,(return.license.node_id),1,0,0,0,,license-simple,"[('license-simple', 'node_id')]"
main.orgs{org}repos.createOrganizationRepository&201(main.createOrganizationRepository&Input):::EXIT,LENGTH(return.owner.node_id)==12,daikon.inv.unary.string.FixedLengthString,(return.owner.node_id),1,0,0,0,,simple-user,"[('simple-user', 'node_id')]"
main.orgs{org}repos.createOrganizationRepository&201(main.createOrganizationRepository&Input):::EXIT,LENGTH(return.owner.avatar_url)==53,daikon.inv.unary.string.FixedLengthString,(return.owner.avatar_url),1,0,0,0,,simple-user,"[('simple-user', 'avatar_url')]"
main.orgs{org}repos.createOrganizationRepository&201(main.createOrganizationRepository&Input):::EXIT,LENGTH(return.owner.gravatar_id)==0,daikon.inv.unary.string.FixedLengthString,(return.owner.gravatar_id),1,0,0,0,,simple-user,"[('simple-user', 'gravatar_id')]"
main.orgs{org}repos.createOrganizationRepository&201(main.createOrganizationRepository&Input):::EXIT,LENGTH(return.owner.type)==12,daikon.inv.unary.string.FixedLengthString,(return.owner.type),1,0,0,0,,simple-user,"[('simple-user', 'type')]"
main.orgs{org}repos.createOrganizationRepository&201(main.createOrganizationRepository&Input):::EXIT,LENGTH(return.default_branch)==4,daikon.inv.unary.string.FixedLengthString,(return.default_branch),1,0,0,0,The default branch of the repository.,repository,"[('repository', 'default_branch')]"
main.orgs{org}repos.createOrganizationRepository&201(main.createOrganizationRepository&Input):::EXIT,LENGTH(return.pushed_at)==20,daikon.inv.unary.string.FixedLengthString,(return.pushed_at),1,0,0,0,,repository,"[('repository', 'pushed_at')]"
main.orgs{org}repos.createOrganizationRepository&201(main.createOrganizationRepository&Input):::EXIT,LENGTH(return.created_at)==20,daikon.inv.unary.string.FixedLengthString,(return.created_at),1,0,0,0,,repository,"[('repository', 'created_at')]"
main.orgs{org}repos.getOrganizationRepositories&200(main.getOrganizationRepositories&Input):::EXIT,LENGTH(return.owner.gravatar_id)==0,daikon.inv.unary.string.FixedLengthString,(return.owner.gravatar_id),1,0,0,0,,simple-user,"[('simple-user', 'gravatar_id')]"
main.orgs{org}repos.getOrganizationRepositories&200(main.getOrganizationRepositories&Input):::EXIT,LENGTH(return.owner.type)==12,daikon.inv.unary.string.FixedLengthString,(return.owner.type),1,0,0,0,,simple-user,"[('simple-user', 'type')]"
main.orgs{org}repos.getOrganizationRepositories&200(main.getOrganizationRepositories&Input):::EXIT,LENGTH(return.pushed_at)==20,daikon.inv.unary.string.FixedLengthString,(return.pushed_at),1,0,0,0,,minimal-repository,"[('minimal-repository', 'pushed_at')]"
main.orgs{org}repos.getOrganizationRepositories&200(main.getOrganizationRepositories&Input):::EXIT,LENGTH(return.created_at)==20,daikon.inv.unary.string.FixedLengthString,(return.created_at),1,0,0,0,,minimal-repository,"[('minimal-repository', 'created_at')]"
main.orgs{org}repos.getOrganizationRepositories&200(main.getOrganizationRepositories&Input):::EXIT,LENGTH(return.updated_at)==20,daikon.inv.unary.string.FixedLengthString,(return.updated_at),1,0,0,0,,minimal-repository,"[('minimal-repository', 'updated_at')]"
main.orgs{org}repos.getOrganizationRepositories&200(main.getOrganizationRepositories&Input):::EXIT,LENGTH(return.license.node_id)==16,daikon.inv.unary.string.FixedLengthString,(return.license.node_id),1,0,0,0,,minimal-repository,"[('minimal-repository', 'node_id')]"
main.shoppinghotel-offers.getMultiHotelOffers&200&data&offers(main.getMultiHotelOffers&Input):::EXIT,LENGTH(return.id)==10,daikon.inv.unary.string.FixedLengthString,(return.id),1,0,0,0,Unique identifier of this offer. Might be valid for a temporary period only.,HotelOffer,"[('HotelOffer', 'id')]"
main.shoppinghotel-offers.getMultiHotelOffers&200&data&offers(main.getMultiHotelOffers&Input):::EXIT,LENGTH(return.rateCode)==3,daikon.inv.unary.string.FixedLengthString,(return.rateCode),1,0,0,0,Special Rate - Provider Response Code (3 chars) Examples    * RAC - Rack    * BAR - Best Available Rate    * PRO - Promotional    * COR - Corporate    * GOV - Government (qualified)    * AAA - AAA (qualified)    * BNB - Bed and Breakfast    * PKG - Package    * TVL - Travel Industry    * SPC - Special Promo Rate    * WKD - Weekend    * CON - Convention    * SNR - Senior (Europe) (qualified)    * ARP - AARP - American Association of Retired People (50+) (qualified)    * SRS - Senior (qualified)    * ROR - Room Only Rate (no breakfast)    * FAM - Family    * DAY - Day rate,HotelOffer,"[('HotelOffer', 'rateCode')]"
main.shoppinghotel-offers.getMultiHotelOffers&200&data&offers(main.getMultiHotelOffers&Input):::EXIT,LENGTH(return.rateFamilyEstimated.type)==1,daikon.inv.unary.string.FixedLengthString,(return.rateFamilyEstimated.type),1,0,0,0,"The type of the rate (public=P, negotiated=N, conditional=C)",HotelProduct_RateFamily,"[('HotelProduct_RateFamily', 'type')]"
main.shoppinghotel-offers.getMultiHotelOffers&200&data&offers(main.getMultiHotelOffers&Input):::EXIT,LENGTH(return.room.type)==3,daikon.inv.unary.string.FixedLengthString,(return.room.type),1,0,0,0,"Room type code, 3 character identifier of the room. The first character identifies the room type category.  The second numeric character identifies the number of beds.  The third character identifies the bed type.  There is a special case where ROH is returned, this value stands for Run Of House.",HotelProduct_RoomDetails,"[('HotelProduct_RoomDetails', 'type')]"
main.shoppinghotel-offers.getMultiHotelOffers&200&data&offers(main.getMultiHotelOffers&Input):::EXIT,LENGTH(return.policies.cancellation.type)==9,daikon.inv.unary.string.FixedLengthString,(return.policies.cancellation.type),1,0,0,0,* FULL_STAY: the Penalty amount equals the `total` price.,CancellationType,"[('CancellationType', 'type')]"
main.shoppinghotel-offers.getMultiHotelOffers&200&data(main.getMultiHotelOffers&Input):::EXIT,LENGTH(return.hotel.cityCode)==3,daikon.inv.unary.string.FixedLengthString,(return.hotel.cityCode),1,0,0,0,Warning: The IATA city code associated to the hotel (not necessary the real Hotel City),Hotel,"[('Hotel', 'cityCode')]"
main.shoppinghotel-offers.getMultiHotelOffers&200&data(main.getMultiHotelOffers&Input):::EXIT,LENGTH(return.hotel.type)==5,daikon.inv.unary.string.FixedLengthString,(return.hotel.type),1,0,0,0,type,Hotel,"[('Hotel', 'type')]"
main.v1publiccomics{comicId}.getComicIndividual&200&data&results&images(main.getComicIndividual&Input):::EXIT,LENGTH(return.path)==57,daikon.inv.unary.string.FixedLengthString,(return.path),1,0,0,0,The directory path of to the image.,Image,"[('Image', 'path')]"
main.v1publiccomics{comicId}.getComicIndividual&200&data&results(main.getComicIndividual&Input):::EXIT,LENGTH(return.diamondCode)==9,daikon.inv.unary.string.FixedLengthString,(return.diamondCode),1,0,0,0,The Diamond code for the comic.,Comic,"[('Comic', 'diamondCode')]"
main.v1publiccomics{comicId}.getComicIndividual&200&data&results(main.getComicIndividual&Input):::EXIT,LENGTH(return.ean)==20,daikon.inv.unary.string.FixedLengthString,(return.ean),1,0,0,0,The EAN barcode for the comic.,Comic,"[('Comic', 'ean')]"
main.v1publiccomics{comicId}.getComicIndividual&200(main.getComicIndividual&Input):::EXIT,LENGTH(return.status)==2,daikon.inv.unary.string.FixedLengthString,(return.status),1,0,0,0,A string description of the call status.,ComicDataWrapper,"[('ComicDataWrapper', 'status')]"
main.v1publiccomics{comicId}.getComicIndividual&200(main.getComicIndividual&Input):::EXIT,LENGTH(return.copyright)==13,daikon.inv.unary.string.FixedLengthString,(return.copyright),1,0,0,0,The copyright notice for the returned result.,ComicDataWrapper,"[('ComicDataWrapper', 'copyright')]"
main.v1publiccomics{comicId}.getComicIndividual&200(main.getComicIndividual&Input):::EXIT,LENGTH(return.attributionText)==38,daikon.inv.unary.string.FixedLengthString,(return.attributionText),1,0,0,0,The attribution notice for this result.  Please display either this notice or the contents of the attributionHTML field on all screens which contain data from the Marvel Comics API.,ComicDataWrapper,"[('ComicDataWrapper', 'attributionText')]"
main.v1publiccomics{comicId}.getComicIndividual&200(main.getComicIndividual&Input):::EXIT,LENGTH(return.attributionHTML)==70,daikon.inv.unary.string.FixedLengthString,(return.attributionHTML),1,0,0,0,An HTML representation of the attribution notice for this result.  Please display either this notice or the contents of the attributionText field on all screens which contain data from the Marvel Comics API.,ComicDataWrapper,"[('ComicDataWrapper', 'attributionHTML')]"
main.v1publiccomics{comicId}.getComicIndividual&200(main.getComicIndividual&Input):::EXIT,LENGTH(return.etag)==40,daikon.inv.unary.string.FixedLengthString,(return.etag),1,0,0,0,A digest value of the content returned by the call.,ComicDataWrapper,"[('ComicDataWrapper', 'etag')]"
main..searchByIdOrTitle&200(main.searchByIdOrTitle&Input):::EXIT,LENGTH(return.Response)==4,daikon.inv.unary.string.FixedLengthString,(return.Response),1,0,0,0,,Response,"[('Response', 'Response')]"
main..searchByIdOrTitle&200(main.searchByIdOrTitle&Input):::EXIT,LENGTH(return.Released)==11,daikon.inv.unary.string.FixedLengthString,(return.Released),1,0,0,0,,Response,"[('Response', 'Released')]"
main..searchByIdOrTitle&200(main.searchByIdOrTitle&Input):::EXIT,LENGTH(return.DVD)==11,daikon.inv.unary.string.FixedLengthString,(return.DVD),1,0,0,0,,Response,"[('Response', 'DVD')]"
main..searchByIdOrTitle&200(main.searchByIdOrTitle&Input):::EXIT,LENGTH(return.seriesID)==9,daikon.inv.unary.string.FixedLengthString,(return.seriesID),1,0,0,0,,Response,"[('Response', 'seriesID')]"
main..bySearch&200(main.bySearch&Input):::EXIT,LENGTH(return.Response)==4,daikon.inv.unary.string.FixedLengthString,(return.Response),1,0,0,0,,Response,"[('Response', 'Response')]"
main.users{user_id}playlists.createPlaylist&201(main.createPlaylist&Input):::EXIT,LENGTH(return.external_urls.spotify)==56,daikon.inv.unary.string.FixedLengthString,(return.external_urls.spotify),1,0,0,0,,playlist,"[('playlist', 'spotify')]"
main.users{user_id}playlists.createPlaylist&201(main.createPlaylist&Input):::EXIT,LENGTH(return.id)==22,daikon.inv.unary.string.FixedLengthString,(return.id),1,0,0,0,The Spotify ID of the playlist.,playlist,"[('playlist', 'id')]"
main.users{user_id}playlists.createPlaylist&201(main.createPlaylist&Input):::EXIT,LENGTH(return.snapshot_id)==56,daikon.inv.unary.string.FixedLengthString,(return.snapshot_id),1,0,0,0,The version identifier for the current playlist. Can be supplied in other requests to target a specific playlist version,playlist,"[('playlist', 'snapshot_id')]"
main.albums{id}tracks.getAlbumTracks&200&items&artists(main.getAlbumTracks&Input):::EXIT,LENGTH(return.id)==22,daikon.inv.unary.string.FixedLengthString,(return.id),1,0,0,0,The Spotify ID for the artist.,artist-simple,"[('artist-simple', 'id')]"
main.albums{id}tracks.getAlbumTracks&200&items(main.getAlbumTracks&Input):::EXIT,LENGTH(return.id)==22,daikon.inv.unary.string.FixedLengthString,(return.id),1,0,0,0,The Spotify ID for the track.,track-simple,"[('track-simple', 'id')]"
main.albums{id}tracks.getAlbumTracks&200&items(main.getAlbumTracks&Input):::EXIT,LENGTH(return.linked_from.id)==22,daikon.inv.unary.string.FixedLengthString,(return.linked_from.id),1,0,0,0,The Spotify ID for the track.,track-simple,"[('track-simple', 'id')]"
main.albums{id}tracks.getAlbumTracks&200&items(main.getAlbumTracks&Input):::EXIT,LENGTH(return.linked_from.type)==5,daikon.inv.unary.string.FixedLengthString,(return.linked_from.type),1,0,0,0,The object type: 'track'.,track-simple,"[('track-simple', 'type')]"
main.albums{id}tracks.getAlbumTracks&200&items(main.getAlbumTracks&Input):::EXIT,LENGTH(return.preview_url)==107,daikon.inv.unary.string.FixedLengthString,(return.preview_url),1,0,0,0,A URL to a 30 second preview (MP3 format) of the track.,track-simple,"[('track-simple', 'preview_url')]"
main.albums{id}tracks.getAlbumTracks&200&items(main.getAlbumTracks&Input):::EXIT,LENGTH(return.type)==5,daikon.inv.unary.string.FixedLengthString,(return.type),1,0,0,0,The object type: 'track'.,track-simple,"[('track-simple', 'type')]"
main.artists{id}albums.getArtistAlbums&200&items&artists(main.getArtistAlbums&Input):::EXIT,LENGTH(return.id)==22,daikon.inv.unary.string.FixedLengthString,(return.id),1,0,0,0,The Spotify ID for the artist.,artist-simple,"[('artist-simple', 'id')]"
main.artists{id}albums.getArtistAlbums&200&items&artists(main.getArtistAlbums&Input):::EXIT,LENGTH(return.uri)==37,daikon.inv.unary.string.FixedLengthString,(return.uri),1,0,0,0,The Spotify URI for the artist.,artist-simple,"[('artist-simple', 'uri')]"
main.artists{id}albums.getArtistAlbums&200&items&images(main.getArtistAlbums&Input):::EXIT,LENGTH(return.url)==64,daikon.inv.unary.string.FixedLengthString,(return.url),1,0,0,0,The source URL of the image.,image,"[('image', 'url')]"
main.businessessearch.getBusinesses&200&businesses(main.getBusinesses&Input):::EXIT,LENGTH(return.id)==22,daikon.inv.unary.string.FixedLengthString,(return.id),1,0,0,0,,BusinessesResult,"[('BusinessesResult', 'id')]"
main.businessessearch.getBusinesses&200&businesses(main.getBusinesses&Input):::EXIT,LENGTH(return.image_url)==68,daikon.inv.unary.string.FixedLengthString,(return.image_url),1,0,0,0,,BusinessesResult,"[('BusinessesResult', 'image_url')]"
main.businessessearch.getBusinesses&200&businesses(main.getBusinesses&Input):::EXIT,LENGTH(return.location.country)==2,daikon.inv.unary.string.FixedLengthString,(return.location.country),1,0,0,0,,BusinessesResult,"[('BusinessesResult', 'country')]"
main.youtubev3videos.getVideos&200&items(main.getVideos&Input):::EXIT,LENGTH(return.contentDetails.dimension)==2,daikon.inv.unary.string.FixedLengthString,(return.contentDetails.dimension),1,0,0,0,The value of dimension indicates whether the video is available in 3D or in 2D.,VideoContentDetails,"[('VideoContentDetails', 'dimension')]"
main.youtubev3videos.getVideos&200&items(main.getVideos&Input):::EXIT,LENGTH(return.etag)==27,daikon.inv.unary.string.FixedLengthString,(return.etag),1,0,0,0,Etag of this resource.,Video,"[('Video', 'etag')]"
main.youtubev3videos.getVideos&200&items(main.getVideos&Input):::EXIT,LENGTH(return.id)==11,daikon.inv.unary.string.FixedLengthString,(return.id),1,0,0,0,The ID that YouTube uses to uniquely identify the video.,Video,"[('Video', 'id')]"
main.youtubev3videos.getVideos&200&items(main.getVideos&Input):::EXIT,LENGTH(return.liveStreamingDetails.actualStartTime)==20,daikon.inv.unary.string.FixedLengthString,(return.liveStreamingDetails.actualStartTime),1,0,0,0,The time that the broadcast actually started. This value will not be available until the broadcast begins.,VideoLiveStreamingDetails,"[('VideoLiveStreamingDetails', 'actualStartTime')]"
main.youtubev3videos.getVideos&200&items(main.getVideos&Input):::EXIT,LENGTH(return.liveStreamingDetails.scheduledStartTime)==20,daikon.inv.unary.string.FixedLengthString,(return.liveStreamingDetails.scheduledStartTime),1,0,0,0,The time that the broadcast is scheduled to begin.,VideoLiveStreamingDetails,"[('VideoLiveStreamingDetails', 'scheduledStartTime')]"
main.youtubev3videos.getVideos&200&items(main.getVideos&Input):::EXIT,LENGTH(return.snippet.channelId)==24,daikon.inv.unary.string.FixedLengthString,(return.snippet.channelId),1,0,0,0,The ID that YouTube uses to uniquely identify the channel that the video was uploaded to.,VideoSnippet,"[('VideoSnippet', 'channelId')]"
main.youtubev3videos.getVideos&200(main.getVideos&Input):::EXIT,LENGTH(return.etag)==27,daikon.inv.unary.string.FixedLengthString,(return.etag),1,0,0,0,Etag of this resource.,VideoListResponse,"[('VideoListResponse', 'etag')]"
main.youtubev3videos.getVideos&200(main.getVideos&Input):::EXIT,LENGTH(return.nextPageToken)==6,daikon.inv.unary.string.FixedLengthString,(return.nextPageToken),1,0,0,0,The token that can be used as the value of the pageToken parameter to retrieve the next page in the result set.,VideoListResponse,"[('VideoListResponse', 'nextPageToken')]"
