pptname,invariant,invariantType,variables,tp,fp,enter,bug,description,response resource,name_attribute
main.orgs{org}repos.getOrganizationRepositories&200.array(main.getOrganizationRepositories&Input):::EXIT,input.per_page >= size(return.array[]),daikon.inv.binary.twoScalar.IntGreaterEqual,"(input.per_page, size(return.array[..]))",1,0,0,0,integer (description: Results per page (max 100));,,"[('input', 'per_page'), (None,)]"
main.shoppinghotel-offers.getMultiHotelOffers&200(main.getMultiHotelOffers&Input):::EXIT,size(input.hotelIds[]) >= size(return.data[]),daikon.inv.binary.twoScalar.IntGreaterEqual,"(size(input.hotelIds[..]), size(return.data[..]))",1,0,0,0,array (description: Amadeus property codes on 8 chars. Mandatory parameter for a search by predefined list of hotels);,,"[('input', 'hotelIds'), (None,)]"
main.v1publiccomics{comicId}.getComicIndividual&200&data&results(main.getComicIndividual&Input):::EXIT,return.creators.available >= return.creators.returned,daikon.inv.binary.twoScalar.IntGreaterEqual,"(return.creators.available, return.creators.returned)",1,0,0,0,"The number of total available creators in this list. Will always be greater than or equal to the ""returned"" value.;The number of creators returned in this collection (up to 20).",CreatorList,"[('CreatorList', 'available'), ('CreatorList', 'returned')]"
main.albums{id}tracks.getAlbumTracks&200(main.getAlbumTracks&Input):::EXIT,input.limit >= size(return.items[]),daikon.inv.binary.twoScalar.IntGreaterEqual,"(input.limit, size(return.items[..]))",1,0,0,0,integer (description: The maximum number of items to return);The requested data.,track-simple-page,"[('input', 'limit'), ('items',)]"
main.albums{id}tracks.getAlbumTracks&200(main.getAlbumTracks&Input):::EXIT,return.limit >= size(return.items[]),daikon.inv.binary.twoScalar.IntGreaterEqual,"(return.limit, size(return.items[..]))",1,0,0,0,The maximum number of items in the response (as set in the query or by default).;The requested data.,track-simple-page,"[('track-simple-page', 'limit'), ('track-simple-page', 'items')]"
main.albums{id}tracks.getAlbumTracks&200(main.getAlbumTracks&Input):::EXIT,return.total >= size(return.items[]),daikon.inv.binary.twoScalar.IntGreaterEqual,"(return.total, size(return.items[..]))",1,0,0,0,The total number of items available to return.;The requested data.,track-simple-page,"[('track-simple-page', 'total'), ('track-simple-page', 'items')]"
main.artists{id}albums.getArtistAlbums&200(main.getArtistAlbums&Input):::EXIT,input.limit >= size(return.items[]),daikon.inv.binary.twoScalar.IntGreaterEqual,"(input.limit, size(return.items[..]))",1,0,0,0,integer (description: The maximum number of items to return);The requested data.,album-simple-page,"[('input', 'limit'), ('items',)]"
main.artists{id}albums.getArtistAlbums&200(main.getArtistAlbums&Input):::EXIT,return.limit >= size(return.items[]),daikon.inv.binary.twoScalar.IntGreaterEqual,"(return.limit, size(return.items[..]))",1,0,0,0,The maximum number of items in the response (as set in the query or by default).;The requested data.,album-simple-page,"[('album-simple-page', 'limit'), ('album-simple-page', 'items')]"
main.artists{id}albums.getArtistAlbums&200(main.getArtistAlbums&Input):::EXIT,return.total >= size(return.items[]),daikon.inv.binary.twoScalar.IntGreaterEqual,"(return.total, size(return.items[..]))",1,0,0,0,The total number of items available to return.;The requested data.,album-simple-page,"[('album-simple-page', 'total'), ('album-simple-page', 'items')]"
main.businessessearch.getBusinesses&200(main.getBusinesses&Input):::EXIT,input.limit >= size(return.businesses[]),daikon.inv.binary.twoScalar.IntGreaterEqual,"(input.limit, size(return.businesses[..]))",1,0,0,0,integer;,BusinessesResult,"[('input', 'limit'), ('businesses',)]"
main.businessessearch.getBusinesses&200(main.getBusinesses&Input):::EXIT,return.total >= size(return.businesses[]),daikon.inv.binary.twoScalar.IntGreaterEqual,"(return.total, size(return.businesses[..]))",1,0,0,0,;,BusinessesResult,"[('BusinessesResult', 'total'), ('BusinessesResult', 'businesses')]"
main.youtubev3videos.getVideos&200(main.getVideos&Input):::EXIT,input.maxResults >= size(return.items[]),daikon.inv.binary.twoScalar.IntGreaterEqual,"(input.maxResults, size(return.items[..]))",1,0,0,0,"integer (description: The *maxResults* parameter specifies the maximum number of items that should be returned in the result set. *Note:* This parameter is supported for use in conjunction with the myRating and chart parameters, but it is not supported for use in conjunction with the id parameter);",VideoListResponse,"[('input', 'maxResults'), ('items',)]"
main.youtubev3videos.getVideos&200(main.getVideos&Input):::EXIT,return.pageInfo.resultsPerPage >= size(return.items[]),daikon.inv.binary.twoScalar.IntGreaterEqual,"(return.pageInfo.resultsPerPage, size(return.items[..]))",1,0,0,0,The number of results included in the API response.;,VideoListResponse,"[('PageInfo', 'resultsPerPage'), ('VideoListResponse', 'items')]"
main.youtubev3videos.getVideos&200(main.getVideos&Input):::EXIT,return.pageInfo.totalResults >= size(return.items[]),daikon.inv.binary.twoScalar.IntGreaterEqual,"(return.pageInfo.totalResults, size(return.items[..]))",1,0,0,0,The total number of results in the result set.;,VideoListResponse,"[('PageInfo', 'totalResults'), ('VideoListResponse', 'items')]"
