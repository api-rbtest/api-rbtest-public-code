pptname,invariant,invariantType,variables,tp,fp,enter,bug,description,response resource,name_attribute
main.shoppinghotel-offers.getMultiHotelOffers&200&data(main.getMultiHotelOffers&Input):::EXIT,return.hotel.hotelId in input.hotelIds[],daikon.inv.binary.sequenceString.MemberString,"(input.hotelIds[..], return.hotel.hotelId)",1,0,0,0,array (description: Amadeus property codes on 8 chars. Mandatory parameter for a search by predefined list of hotels);Amadeus Property Code (8 chars),Hotel,"[('input', 'hotelIds'), ('hotelId',)]"
main.artists{id}albums.getArtistAlbums&200&items(main.getArtistAlbums&Input):::EXIT,return.album_group in input.include_groups[],daikon.inv.binary.sequenceString.MemberString,"(input.include_groups[..], return.album_group)",1,0,0,0,array (description: Filter by album types);,album-simple,"[('input', 'include_groups'), ('album_group',)]"
main.businessessearch.getBusinesses&200&businesses(main.getBusinesses&Input):::EXIT,return.location.address1 in return.location.display_address[],daikon.inv.binary.sequenceString.MemberString,"(return.location.address1, return.location.display_address[..])",1,0,0,0,;,BusinessesResult,"[('BusinessesResult', 'address1'), ('BusinessesResult', 'display_address')]"
main.businessessearch.getBusinesses&200&businesses(main.getBusinesses&Input):::EXIT,return.location.address2 in return.location.display_address[],daikon.inv.binary.sequenceString.MemberString,"(return.location.address2, return.location.display_address[..])",1,0,0,0,;,BusinessesResult,"[('BusinessesResult', 'address2'), ('BusinessesResult', 'display_address')]"
main.businessessearch.getBusinesses&200&businesses(main.getBusinesses&Input):::EXIT,return.location.address3 in return.location.display_address[],daikon.inv.binary.sequenceString.MemberString,"(return.location.address3, return.location.display_address[..])",1,0,0,0,;,BusinessesResult,"[('BusinessesResult', 'address3'), ('BusinessesResult', 'display_address')]"
main.youtubev3videos.getVideos&200&items(main.getVideos&Input):::EXIT,return.id in input.id[],daikon.inv.binary.sequenceString.MemberString,"(input.id[..], return.id)",1,0,0,0,array (description: Return videos with the given ids);The ID that YouTube uses to uniquely identify the video.,Video,"[('input', 'id'), ('id',)]"
main.youtubev3videos.getVideos&200&items(main.getVideos&Input):::EXIT,input.regionCode in return.contentDetails.regionRestriction.allowed[],daikon.inv.binary.sequenceString.MemberString,"(input.regionCode, return.contentDetails.regionRestriction.allowed[..])",1,0,0,0,"string (description: Use a chart that is specific to the specified region);A list of region codes that identify countries where the video is viewable. If this property is present and a country is not listed in its value, then the video is blocked from appearing in that country. If this property is present and contains an empty list, the video is blocked in all countries.",VideoContentDetailsRegionRestriction,"[('input', 'regionCode'), ('allowed',)]"
