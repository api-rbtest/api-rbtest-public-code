pptname,invariant,invariantType,variables,tp,fp,enter,bug,description,response resource,name_attribute
main.orgs{org}repos.createOrganizationRepository&201(main.createOrganizationRepository&Input):::EXIT,return.fork == false,daikon.inv.unary.scalar.OneOfScalar,(return.fork),1,0,0,0,,repository,"[('repository', 'fork')]"
main.orgs{org}repos.createOrganizationRepository&201(main.createOrganizationRepository&Input):::EXIT,return.has_downloads == true,daikon.inv.unary.scalar.OneOfScalar,(return.has_downloads),1,0,0,0,Whether downloads are enabled.,repository,"[('repository', 'has_downloads')]"
main.orgs{org}repos.createOrganizationRepository&201(main.createOrganizationRepository&Input):::EXIT,return.template_repository == null,daikon.inv.unary.scalar.OneOfScalar,(return.template_repository),1,0,0,0,,repository,"[('repository', 'template_repository')]"
main.orgs{org}repos.createOrganizationRepository&201(main.createOrganizationRepository&Input):::EXIT,return.template_repository.owner == null,daikon.inv.unary.scalar.OneOfScalar,(return.template_repository.owner),1,0,0,0,,repository,"[('repository', 'owner')]"
main.orgs{org}repos.createOrganizationRepository&201(main.createOrganizationRepository&Input):::EXIT,return.template_repository.topics == null,daikon.inv.unary.scalar.OneOfScalar,(return.template_repository.topics),1,0,0,0,,repository,"[('repository', 'topics')]"
main.orgs{org}repos.createOrganizationRepository&201(main.createOrganizationRepository&Input):::EXIT,return.template_repository.permissions == null,daikon.inv.unary.scalar.OneOfScalar,(return.template_repository.permissions),1,0,0,0,,repository,"[('repository', 'permissions')]"
main.orgs{org}repos.getOrganizationRepositories&200(main.getOrganizationRepositories&Input):::EXIT,return.permissions.pull == true,daikon.inv.unary.scalar.OneOfScalar,(return.permissions.pull),1,0,0,0,,minimal-repository,"[('minimal-repository', 'pull')]"
main.v1publiccomics{comicId}.getComicIndividual&200&data&results(main.getComicIndividual&Input):::EXIT,"size(return.prices[]) one of { 1, 2 }",daikon.inv.unary.scalar.OneOfScalar,(size(return.prices[..])),1,0,0,0,A list of prices for this comic.,Comic,"[('Comic', 'prices')]"
main.v1publiccomics{comicId}.getComicIndividual&200(main.getComicIndividual&Input):::EXIT,return.data.limit == 20,daikon.inv.unary.scalar.OneOfScalar,(return.data.limit),1,0,0,0,The requested result limit.,ComicDataContainer,"[('ComicDataContainer', 'limit')]"
main.users{user_id}playlists.createPlaylist&201(main.createPlaylist&Input):::EXIT,return.owner.followers == null,daikon.inv.unary.scalar.OneOfScalar,(return.owner.followers),1,0,0,0,Information about the followers of the artist.,followers,"[('followers', 'followers')]"
main.users{user_id}playlists.createPlaylist&201(main.createPlaylist&Input):::EXIT,return.tracks.limit == 100,daikon.inv.unary.scalar.OneOfScalar,(return.tracks.limit),1,0,0,0,The maximum number of items in the response (as set in the query or by default).,playlist-track-page,"[('playlist-track-page', 'limit')]"
main.albums{id}tracks.getAlbumTracks&200&items(main.getAlbumTracks&Input):::EXIT,return.is_local == false,daikon.inv.unary.scalar.OneOfScalar,(return.is_local),1,0,0,0,Is local,track-simple,"[('track-simple', 'is_local')]"
main.youtubev3videos.getVideos&200&items(main.getVideos&Input):::EXIT,return.ageGating == null,daikon.inv.unary.scalar.OneOfScalar,(return.ageGating),1,0,0,0,,VideoAgeGating,"[('VideoAgeGating', 'ageGating')]"
main.youtubev3videos.getVideos&200&items(main.getVideos&Input):::EXIT,return.contentDetails.countryRestriction == null,daikon.inv.unary.scalar.OneOfScalar,(return.contentDetails.countryRestriction),1,0,0,0,Rights management policy for YouTube resources.,AccessPolicy,"[('AccessPolicy', 'countryRestriction')]"
main.youtubev3videos.getVideos&200&items(main.getVideos&Input):::EXIT,return.fileDetails == null,daikon.inv.unary.scalar.OneOfScalar,(return.fileDetails),1,0,0,0,"Describes original video file properties, including technical details about audio and video streams, but also metadata information like content length, digitization time, or geotagging information.",VideoFileDetails,"[('VideoFileDetails', 'fileDetails')]"
main.youtubev3videos.getVideos&200&items(main.getVideos&Input):::EXIT,return.fileDetails.audioStreams == null,daikon.inv.unary.scalar.OneOfScalar,(return.fileDetails.audioStreams),1,0,0,0,A list of audio streams contained in the uploaded video file. Each item in the list contains detailed metadata about an audio stream.,VideoFileDetails,"[('VideoFileDetails', 'audioStreams')]"
main.youtubev3videos.getVideos&200&items(main.getVideos&Input):::EXIT,return.fileDetails.videoStreams == null,daikon.inv.unary.scalar.OneOfScalar,(return.fileDetails.videoStreams),1,0,0,0,A list of video streams contained in the uploaded video file. Each item in the list contains detailed metadata about a video stream.,VideoFileDetails,"[('VideoFileDetails', 'videoStreams')]"
main.youtubev3videos.getVideos&200&items(main.getVideos&Input):::EXIT,return.monetizationDetails == null,daikon.inv.unary.scalar.OneOfScalar,(return.monetizationDetails),1,0,0,0,Details about monetization of a YouTube Video.,VideoMonetizationDetails,"[('VideoMonetizationDetails', 'monetizationDetails')]"
main.youtubev3videos.getVideos&200&items(main.getVideos&Input):::EXIT,return.monetizationDetails.access == null,daikon.inv.unary.scalar.OneOfScalar,(return.monetizationDetails.access),1,0,0,0,Rights management policy for YouTube resources.,AccessPolicy,"[('AccessPolicy', 'access')]"
main.youtubev3videos.getVideos&200&items(main.getVideos&Input):::EXIT,return.processingDetails == null,daikon.inv.unary.scalar.OneOfScalar,(return.processingDetails),1,0,0,0,Describes processing status and progress and availability of some other Video resource parts.,VideoProcessingDetails,"[('VideoProcessingDetails', 'processingDetails')]"
main.youtubev3videos.getVideos&200&items(main.getVideos&Input):::EXIT,return.processingDetails.processingProgress == null,daikon.inv.unary.scalar.OneOfScalar,(return.processingDetails.processingProgress),1,0,0,0,Video processing progress and completion time estimate.,VideoProcessingDetailsProcessingProgress,"[('VideoProcessingDetailsProcessingProgress', 'processingProgress')]"
main.youtubev3videos.getVideos&200&items(main.getVideos&Input):::EXIT,return.projectDetails == null,daikon.inv.unary.scalar.OneOfScalar,(return.projectDetails),1,0,0,0,"DEPRECATED. b/157517979: This part was never populated after it was added. However, it sees non-zero traffic because there is generated client code in the wild that refers to it [1]. We keep this field and do NOT remove it because otherwise V3 would return an error when this part gets requested [2]. [1] https://developers.google.com/resources/api-libraries/documentation/youtube/v3/csharp/latest/classGoogle_1_1Apis_1_1YouTube_1_1v3_1_1Data_1_1VideoProjectDetails.html [2] http://google3/video/youtube/src/python/servers/data_api/common.py?l=1565-1569&rcl=344141677",VideoProjectDetails,"[('VideoProjectDetails', 'projectDetails')]"
main.youtubev3videos.getVideos&200&items(main.getVideos&Input):::EXIT,return.snippet.thumbnails.default.height == 90,daikon.inv.unary.scalar.OneOfScalar,(return.snippet.thumbnails.default.height),1,0,0,0,(Optional) Height of the thumbnail image.,Thumbnail,"[('Thumbnail', 'height')]"
main.youtubev3videos.getVideos&200&items(main.getVideos&Input):::EXIT,return.snippet.thumbnails.high.height == 360,daikon.inv.unary.scalar.OneOfScalar,(return.snippet.thumbnails.high.height),1,0,0,0,(Optional) Height of the thumbnail image.,Thumbnail,"[('Thumbnail', 'height')]"
main.youtubev3videos.getVideos&200&items(main.getVideos&Input):::EXIT,return.snippet.thumbnails.maxres.height == 720,daikon.inv.unary.scalar.OneOfScalar,(return.snippet.thumbnails.maxres.height),1,0,0,0,(Optional) Height of the thumbnail image.,Thumbnail,"[('Thumbnail', 'height')]"
main.youtubev3videos.getVideos&200&items(main.getVideos&Input):::EXIT,return.snippet.thumbnails.medium.height == 180,daikon.inv.unary.scalar.OneOfScalar,(return.snippet.thumbnails.medium.height),1,0,0,0,(Optional) Height of the thumbnail image.,Thumbnail,"[('Thumbnail', 'height')]"
main.youtubev3videos.getVideos&200&items(main.getVideos&Input):::EXIT,return.snippet.thumbnails.standard.height == 480,daikon.inv.unary.scalar.OneOfScalar,(return.snippet.thumbnails.standard.height),1,0,0,0,(Optional) Height of the thumbnail image.,Thumbnail,"[('Thumbnail', 'height')]"
main.youtubev3videos.getVideos&200&items(main.getVideos&Input):::EXIT,return.suggestions == null,daikon.inv.unary.scalar.OneOfScalar,(return.suggestions),1,0,0,0,"Specifies suggestions on how to improve video content, including encoding hints, tag suggestions, and editor suggestions.",VideoSuggestions,"[('VideoSuggestions', 'suggestions')]"
main.youtubev3videos.getVideos&200&items(main.getVideos&Input):::EXIT,return.suggestions.editorSuggestions == null,daikon.inv.unary.scalar.OneOfScalar,(return.suggestions.editorSuggestions),1,0,0,0,A list of video editing operations that might improve the video quality or playback experience of the uploaded video.,VideoSuggestions,"[('VideoSuggestions', 'editorSuggestions')]"
main.youtubev3videos.getVideos&200&items(main.getVideos&Input):::EXIT,return.suggestions.tagSuggestions == null,daikon.inv.unary.scalar.OneOfScalar,(return.suggestions.tagSuggestions),1,0,0,0,A list of keyword tags that could be added to the video's metadata to increase the likelihood that users will locate your video when searching or browsing on YouTube.,VideoSuggestions,"[('VideoSuggestions', 'tagSuggestions')]"
main.youtubev3videos.getVideos&200(main.getVideos&Input):::EXIT,return.tokenPagination == null,daikon.inv.unary.scalar.OneOfScalar,(return.tokenPagination),1,0,0,0,Stub token pagination template to suppress results.,TokenPagination,"[('TokenPagination', 'tokenPagination')]"
